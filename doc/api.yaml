openapi: 3.0.3
info:
  title: Simplified login API specification
  description: |-
    This OpenAPI document describes the simplified login API.
    Copy and paste the API from the `paths` key to your OpenAPI document.
  version: "1"
paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
            schema: { $ref: "#/components/schemas/User" }
        required: true
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    # change here if you decide to use an integer
                    # or any other type of identifier
                    type: string
                    example: "abcdef012345"
                    
  /session/{Username}:
    parameters:
      - $ref: "#/components/parameters/Username"
    put:
      summary: Set Username
      description: "Sets the username of the user"
      operationId: setMyUserName
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Username updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found

components:
  schemas:
    User:
      description: "Object representing a User"
      type: object
      properties:
        Username:
          description: "a unique identifier of the user"
          type: string
          example: Maria
          pattern: 'Ë†.*?$'
          minLength: 3
          maxLength: 16
        ProfilePicture:
          description: "the profile picture of the user"
            
  parameters:
    Username:
      schema:
        type: string
        example: "abcdef012345"
        readOnly: true
      name: Username
      in: path
      required: true
      description: Unique Username
        
                      
      